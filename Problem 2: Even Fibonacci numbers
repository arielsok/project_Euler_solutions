"""
█████ https://projecteuler.net/problem=2 █████
█ Each new term in the Fibonacci sequence is generated by adding the previous two terms.
█ By starting with 1 and 2, the first 10 terms will be:
█ 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
█ By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


"""
██████████████████████████████
This function gets a number and returns the sum of the even numbers in the Fibonacci sequence between 1 and the number.
:param n:   (int) a positive integer
:output:    (int) the sum of the even numbers in the Fibonacci sequence between 1 and the number
"""
def even_fibonacci_numbers(n):
    previous_num = 1
    current_num = 2
    sum = 0
    
    while(current_num <= n):
	
        if current_num%2 == 0:
            sum += current_num
            
        temp_num = previous_num
        previous_num = current_num
        current_num += temp_num
        
    return sum


"""
██████████████████████████████
"""
def main():
    print(even_fibonacci_numbers(4000000))


"""
██████████████████████████████
"""
if __name__ == '__main__':
    main()
